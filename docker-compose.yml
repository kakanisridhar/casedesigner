version: '3.5'

services:
  postgres:
    container_name: postgres
    image: postgres
    ports:
      - '${POSTGRES_PORT}:${POSTGRES_PORT}'
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    networks:
      - postgres
    restart: unless-stopped

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    volumes:
      - pgadmin:/root/.pgadmin
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD}
    networks:
      - postgres
    restart: unless-stopped

  backend:
    container_name: backend
    image: case-designer-backend
    build:
      context: .
      dockerfile: ./backend/dockerfile
    # env_file:
    #   - packages/server/.database.${NODE_ENV}.env
    ports:
      - '3001:3001'
    networks:
      - postgres
    restart: unless-stopped
    command: yarn backend start
    depends_on:
      - postgres

  frontend:
    container_name: frontend
    image: case-designer-frontend
    build:
      context: .
      dockerfile: ./frontend/dockerfile
    ports:
      - '3000:3000'
    networks:
      - postgres
    restart: unless-stopped

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  pgadmin:
  backend:
